name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          app-aws-deploy/backend/package-lock.json
          app-aws-deploy/frontend/package-lock.json

    - name: Install backend dependencies
      run: |
        cd app-aws-deploy/backend
        npm ci

    - name: Install frontend dependencies
      run: |
        cd app-aws-deploy/frontend
        npm ci

    - name: Run backend tests
      run: |
        cd app-aws-deploy/backend
        npm test --if-present

    - name: Run frontend tests
      run: |
        cd app-aws-deploy/frontend
        npm test --if-present

    - name: Build frontend
      run: |
        cd app-aws-deploy/frontend
        npm run build

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    name: Build and Deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./app-aws-deploy/backend
        file: ./app-aws-deploy/backend/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/my-inv-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/my-inv-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./app-aws-deploy/frontend
        file: ./app-aws-deploy/frontend/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/my-inv-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/my-inv-frontend:${{ github.sha }}
        build-args: |
          NEXT_PUBLIC_API_URL=http://${{ secrets.HOST }}:5001/api
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      timeout-minutes: 5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script_stop: true
        debug: true
        command_timeout: 300s
        script: |
          set -e
          echo "Starting deployment..."
          cd /opt/my-inv-app
          echo "Pulling latest code..."
          git pull origin main
          echo "Pulling Docker images..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-inv-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-inv-frontend:latest
          echo "Stopping existing containers..."
          docker-compose -f docker-compose.prod.yml down || true
          echo "Starting new containers..."
          docker-compose -f docker-compose.prod.yml up -d
          echo "Waiting for containers to be ready..."
          sleep 30
          docker ps
          echo "Deployment completed!"

