version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: inventory-mongodb-prod
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data-prod:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - inventory-network-prod

  backend:
    image: ${DOCKER_USERNAME}/my-inv-backend:latest
    container_name: inventory-backend-prod
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/inventory?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      PORT: 5001
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      - mongodb
    networks:
      - inventory-network-prod

  frontend:
    image: ${DOCKER_USERNAME}/my-inv-frontend:latest
    container_name: inventory-frontend-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${API_URL}
    depends_on:
      - backend
    networks:
      - inventory-network-prod

  nginx:
    image: nginx:alpine
    container_name: inventory-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - inventory-network-prod

volumes:
  mongo-data-prod:

networks:
  inventory-network-prod:
    driver: bridge